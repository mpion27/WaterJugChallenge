@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">



    <label for="basic-url">Jug X</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">

        </div>
        <input type="text" class="form-control onlyNumber" id="txtJugA" aria-describedby="basic-addon3">
    </div>

    <label for="basic-url">Jug Y</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">

        </div>
        <input type="text" class="form-control onlyNumber" id="txtJugB" aria-describedby="basic-addon3">
    </div>

    <label for="basic-url">Jug Z</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">

        </div>
        <input type="text" class="form-control onlyNumber" id="txtJugZ" aria-describedby="basic-addon3">
    </div>

</div>

<input type="button" id="btnGetSolution" value="Get solution" class="btn btn-default" />

<div class="container">
    <div class="row">
        <div class="col-sm-8">
            <div id="app">
                <div id="chart">
                    <apexchart type="bar" height="350" :options="chartOptions" :series="series"></apexchart>
                </div>
            </div>
        </div>

        <div class="col-sm-4">
            <div id="printActions">

            </div>
        </div>
    </div>
</div>



@section scripts{

    <script>
        var dataSet;
        var chart;

        var FILL_JUG_A = "FILL_JUG_A";
        var FILL_JUG_B = "FILL_JUG_B";
        var TRANSFER_AB = "TRANSFER_AB";
        var TRANSFER_BA = "TRANSFER_BA";
        var TRANSFER_AZ = "TRANSFER_AZ";
        var TRANSFER_BZ = "TRANSFER_BZ";
        var EMPTY_JUG_A = "EMPTY_JUG_A";
        var EMPTY_JUG_B = "EMPTY_JUG_B";

    $(function () {
        $("#btnGetSolution").click(function () {
            console.log("cargar");
            var url = "@Url.Action("getWaterChallengeSolution", "Home")";
            var JugA = $("#txtJugA").val();
            var JugB = $("#txtJugB").val();
            var JugZ = $("#txtJugZ").val();

            var data = { JugA: JugA, JugB: JugB, JugZ: JugZ };

            $.post(url, data).done(function (data) {
                dataSet = data;
                $("#printActions").empty();
                if (dataSet.length != 0) {
                    $("#printActions").append("<h3>Actions:</h3><br>");
                    addDataToChart(data, JugA, JugB, JugZ);
                } else {
                    $("#printActions").append("No Solution");
                }
            });
        });

    });



        var options = {
            series: [
                {
                    name: '',
                    data: [
                        {
                            x: 'X',
                            y: 3,
                            goals: [
                                {
                                    name: 'Size',
                                    value: 3,
                                    strokeHeight: 7,
                                    strokeColor: '#775DD0'
                                }
                            ]
                        },
                        {
                            x: 'Y',
                            y: 5,
                            goals: [
                                {
                                    name: 'Size',
                                    value: 5,
                                    strokeHeight: 7,
                                    strokeColor: '#775DD0'
                                }
                            ]
                        },
                        {
                            x: 'Z',
                            y: 10,
                            goals: [
                                {
                                    name: 'Size',
                                    value: 5,
                                    strokeHeight: 7,
                                    strokeColor: '#775DD0'
                                }
                            ]
                        }
                    ]
                }
            ],
            chart: {
                height: 350,
                type: 'bar'
            },
            plotOptions: {
                bar: {
                    columnWidth: '60%'
                }
            },
            colors: ['#00E396'],
            dataLabels: {
                enabled: false
            },
            legend: {
                show: false,
                showForSingleSeries: true,
                //customLegendItems: ['', 'Expected'],
                markers: {
                    fillColors: ['#00E396', '#775DD0']
                }
            }
        };

        async function addDataToChart(data, jugA, jugB, jugZ) {
            options.series[0].data[0].goals[0].value = jugA;
            options.series[0].data[1].goals[0].value = jugB;
            options.series[0].data[2].goals[0].value = jugZ;

            chart = new ApexCharts(document.querySelector("#app"), options);
            chart.render();

            for (var i = 0; i < data.length; i++) {
                    $("#printActions").append((i+1)+") ");
                    addActionDescription(data[i].Action);
                    console.log(data[i]);
                    options.series[0].data[0].y = data[i].WaterInA;
                    options.series[0].data[1].y = data[i].WaterInB;
                    options.series[0].data[2].y = data[i].WaterInZ;
                    chart.animations.w.config.chart.animations.speed = 0.1;

                    chart.update();
                    await sleep(700);
                }
            $("#printActions").append("<h4>Solved!</h4><br>");

        }
        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
        function addActionDescription(action) {

            switch (action) {
                case FILL_JUG_A:
                    $("#printActions").append("Fill Jug X<br>");
                    break;
                case FILL_JUG_B:
                    $("#printActions").append("Fill Jug Y<br>");
                    break;
                case TRANSFER_AB:
                    $("#printActions").append("Transfer X to Y<br>");
                    break;
                case TRANSFER_BA:
                    $("#printActions").append("Transfer Y to X<br>");
                    break;
                case TRANSFER_AZ:
                    $("#printActions").append("Transfer X to Z<br>");
                    break;
                case TRANSFER_BZ:
                    $("#printActions").append("Transfer Y to Z<br>");
                    break;
                case EMPTY_JUG_A:
                    $("#printActions").append("Empty Jug X<br>");
                    break;
                case EMPTY_JUG_B:
                    $("#printActions").append("Empty Jug Y<br>");
                    break;
            }

        }
        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));

        $(".onlyNumber").inputFilter(function (value) {
            return /^\d*$/.test(value);    // Allow digits only, using a RegExp
        });
    </script>
}